{"version":3,"sources":["components/error404/Error404.module.css","components/superComponents/c1-SuperInputText/SuperInputText.module.css","components/superComponents/c2-SuperButton/SuperButton.module.css","components/superComponents/c3-SuperCheckbox/SuperCheckbox.module.css","components/nav/Nav.module.css","components/profile/Profile.tsx","components/login/Login.tsx","components/passwordRecovery/PasswordRecovery.tsx","components/enteringNewPassword/EnteringNewPassword.tsx","components/registration/Registration.tsx","components/superComponents/c1-SuperInputText/SuperInputText.tsx","components/superComponents/c2-SuperButton/SuperButton.tsx","components/superComponents/c3-SuperCheckbox/SuperCheckbox.tsx","components/superComponents/SuperComponents.tsx","components/error404/Error404.tsx","Routes/Navlinks/Navlinks.tsx","components/nav/Nav.tsx","Routes/Routes.tsx","App.tsx","reportWebVitals.ts","state/reducers/login.ts","state/reducers/profileReducer.ts","state/reducers/registration.ts","state/reducers/passwordRecovery.ts","state/reducers/enteringNewPassword.ts","state/store.ts","index.tsx","Routes/Navlinks/Navlinks.module.css"],"names":["module","exports","Profile","Login","PasswordRecovery","EnteringNewPassword","Registration","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperComponents","Error","style","errorContainer","link","to","PATH","PROFILE","Navlinks","groupLink","LOGIN","PASSWORD_RECOVERY","ENTERING_NEW_PASSWORD","REGISTRATION","SUPER_COMPONENTS","Nav","nav","Routes","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","login","state","profile","registration","passwordRecovery","enteringNewPassword","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12c88247.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorContainer\":\"Error404_errorContainer__2gGsf\",\"error\":\"Error404_error__3If58\",\"link\":\"Error404_link__2uDxA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3kfuR\",\"errorInput\":\"SuperInputText_errorInput__3oa7E\",\"error\":\"SuperInputText_error__395KF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__adRg1\",\"red\":\"SuperButton_red__7w76v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1kfyw\",\"spanClassName\":\"SuperCheckbox_spanClassName__3eNLI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2l-YZ\"};","import React from \"react\";\n\nexport const Profile = () => {\n    return (\n        <div>\n            <h1>Profile</h1>\n        </div>\n    )\n}","import React from \"react\";\n\nexport const Login = () => {\n    return (\n        <div>\n            <h1>Login</h1>\n        </div>\n    )\n}","import React from \"react\";\n\nexport const PasswordRecovery = () => {\n    return (\n        <div>\n            <h1>PasswordRecovery</h1>\n        </div>\n    )\n}","import React from \"react\";\n\nexport const EnteringNewPassword = () => {\n    return (\n        <div>\n            <h1>EnteringNewPassword</h1>\n        </div>\n    )\n}","import React from \"react\";\n\nexport const Registration = () => {\n    return (\n        <div>\n            <h1>Registration</h1>\n        </div>\n    )\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeText && onChangeText(e.currentTarget.value);\n\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n        e.key === \"Enter\" && onEnter && onEnter();\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = error ? s.errorInput : className\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className, ...restProps\n    }) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps}\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import SuperInputText from \"./c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"./c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./c3-SuperCheckbox/SuperCheckbox\";\n\nexport const SuperComponents = () => {\n    return (\n        <div>\n            <SuperInputText/>\n            <SuperButton/>\n            <SuperCheckbox/>\n        </div>\n    )\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport style from './Error404.module.css'\nimport {PATH} from \"../../Routes/Routes\";\n\nexport const Error = () => {\n    return (\n        <div className={style.errorContainer}>\n            <div className={style.error}>\n                <h1>404 Error page</h1>\n                <p>Sorry, This page doesn't exist</p>\n                <NavLink className={style.link} to={PATH.PROFILE}>Go To Profile</NavLink>\n            </div>\n        </div>\n    )\n}","import React from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport {PATH} from \"../Routes\";\nimport style from './Navlinks.module.css'\n\nexport const Navlinks = () => {\n    return (\n        <div className={style.groupLink}>\n            <NavLink className={style.link} to={PATH.PROFILE}>Profile</NavLink>\n            <NavLink className={style.link} to={PATH.LOGIN}>Login</NavLink>\n            <NavLink className={style.link} to={PATH.PASSWORD_RECOVERY}>Password Recovery</NavLink>\n            <NavLink className={style.link} to={PATH.ENTERING_NEW_PASSWORD}>Entering New Password</NavLink>\n            <NavLink className={style.link} to={PATH.REGISTRATION}>Registration</NavLink>\n            <NavLink className={style.link} to={PATH.SUPER_COMPONENTS}>Super Components</NavLink>\n        </div>\n    )\n}","import {Navlinks} from \"../../Routes/Navlinks/Navlinks\";\nimport style from './Nav.module.css'\n\nexport const Nav = () => {\n    return (\n        <div className={style.nav}>\n            <Navlinks/>\n        </div>\n    )\n}","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {Profile} from \"../components/profile/Profile\";\nimport {Login} from \"../components/login/Login\";\nimport {PasswordRecovery} from \"../components/passwordRecovery/PasswordRecovery\";\nimport {EnteringNewPassword} from \"../components/enteringNewPassword/EnteringNewPassword\";\nimport {Registration} from \"../components/registration/Registration\";\nimport {SuperComponents} from \"../components/superComponents/SuperComponents\";\nimport {Error} from \"../components/error404/Error404\";\nimport {Navlinks} from \"./Navlinks/Navlinks\";\nimport {Nav} from \"../components/nav/Nav\";\n\nexport const PATH = {\n    PROFILE: '/profile',\n    LOGIN: '/login',\n    PASSWORD_RECOVERY: '/password-recovery',\n    ENTERING_NEW_PASSWORD: '/entering-new-password',\n    REGISTRATION: '/registration',\n    SUPER_COMPONENTS: '/super-components',\n}\nexport const Routes = () => {\n    return (\n        <div>\n            <Nav/>\n            <Switch>\n                <Route exact path={PATH.PROFILE} component={Profile}/>\n                <Route exact path={PATH.LOGIN} component={Login}/>\n                <Route exact path={PATH.PASSWORD_RECOVERY} component={PasswordRecovery}/>\n                <Route exact path={PATH.ENTERING_NEW_PASSWORD} component={EnteringNewPassword}/>\n                <Route exact path={PATH.REGISTRATION} component={Registration}/>\n                <Route exact path={PATH.SUPER_COMPONENTS} component={SuperComponents}/>\n                <Route path='*' component={Error}/>\n            </Switch>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport {Routes} from \"./Routes/Routes\";\n\nconst App = () => (\n    <div className=\"App\">\n        <Routes/>\n    </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {}\n\ntype initialStateType = typeof initialState\n\nexport const loginReducer = (state: initialStateType = initialState, action: actionType) => {\nreturn state\n}\ntype actionType = {}","const initialState = {}\n\ntype initialStateType = typeof initialState\n\nexport const profileReducer = (state: initialStateType = initialState, action: actionType) => {\n    return state\n}\ntype actionType = {}","const initialState = {}\n\ntype initialStateType = typeof initialState\n\nexport const registrationReducer = (state: initialStateType = initialState, action: actionType) => {\n    return state\n}\ntype actionType = {}","const initialState = {}\n\ntype initialStateType = typeof initialState\n\nexport const passwordRecoveryReducer = (state: initialStateType = initialState, action: actionType) => {\n    return state\n}\ntype actionType = {}","const initialState = {}\n\ntype initialStateType = typeof initialState\n\nexport const enteringNewPasswordReducer = (state: initialStateType = initialState, action: actionType) => {\n    return state\n}\ntype actionType = {}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {loginReducer} from \"./reducers/login\";\nimport {profileReducer} from \"./reducers/profileReducer\";\nimport {registrationReducer} from \"./reducers/registration\";\nimport {passwordRecoveryReducer} from \"./reducers/passwordRecovery\";\nimport {enteringNewPasswordReducer} from \"./reducers/enteringNewPassword\";\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n    profile: profileReducer,\n    registration: registrationReducer,\n    passwordRecovery: passwordRecoveryReducer,\n    enteringNewPassword: enteringNewPasswordReducer\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\ntype appRootStateType = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./state/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groupLink\":\"Navlinks_groupLink__MBg4D\",\"link\":\"Navlinks_link__2C8nE\"};"],"sourceRoot":""}